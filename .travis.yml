os:
 - linux
 - osx
language: cpp
sudo: true
before_install:
 - chmod +x $TRAVIS_BUILD_DIR/scripts/*
 - if [[ $TRAVIS_OS_NAME = linux   ]]; then scripts/mingw_before_install; fi
 - if [[ $TRAVIS_OS_NAME = osx     ]]; then scripts/osx_before_install;   fi
install:
 - if [[ $TRAVIS_OS_NAME = linux   ]]; then scripts/mingw_install; fi
 - if [[ $TRAVIS_OS_NAME = osx     ]]; then scripts/osx_install; fi
before_script:
 # Don't ask for confirmation when using scp
 - echo -e "Host armedpineapple.co.uk\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
 - echo -e "Host server2.armedpineapple.co.uk\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
script:
 - cd $TRAVIS_BUILD_DIR/fresh
 # Check if there are trailing whitespaces.
 - ${TRAVIS_BUILD_DIR}/scripts/check_trailing_whitespaces.py $TRAVIS_BUILD_DIR
 # Check for incorrectly encoded language files.
 - python ${TRAVIS_BUILD_DIR}/scripts/check_language_files_not_BOM.py $TRAVIS_BUILD_DIR/CorsixTH/Lua/languages
 # Check if there are lua classes with invalid/improper declarations.
 - python ${TRAVIS_BUILD_DIR}/scripts/check_lua_classes.py
 # Validate lua files
 - (LUA_FAILURE=0; for file in `find CorsixTH -name '*.lua' -not -path "CorsixTH/Lua/languages/*"`; do luac -p $file; if [ $? != 0 ]; then LUA_FAILURE=1; fi; done; exit $LUA_FAILURE)
 # Run lua unit tests
 - cd $TRAVIS_BUILD_DIR/CorsixTH/Luatest
 - eval `luarocks path`
 - LUA_PATH="../Lua/?.lua;$LUA_PATH" busted
 # Build Leveledit and documentation on linux only as they are cross platform
 - if [[ $TRAVIS_OS_NAME = linux   ]]; then $TRAVIS_BUILD_DIR/scripts/build_cross_platform_targets; fi
after_success:
 - mkdir -p $TRAVIS_BUILD_DIR/fresh/CorsixTH
 - if [[ $TRAVIS_OS_NAME = linux   ]]; then $TRAVIS_BUILD_DIR/scripts/mingw_after_success; fi
 # Copy over files based on the existing rsync filters file, plus the human readable files
 - cd $TRAVIS_BUILD_DIR/CorsixTH/
 - rsync -rv --include-from=RequiredResources.txt --exclude="*" . ../fresh/CorsixTH
 - cd ../
 - cp README.txt LICENSE.txt CONTRIBUTING.txt fresh/CorsixTH
 - cd fresh/CorsixTH
 - rm -rf cmake_install.cmake CMakeFiles CMakeScripts SDLMain Src
 - if [[ $TRAVIS_OS_NAME = osx     ]]; then mv -f Release/Corsixth.app . && rm -rf Release CorsixTH.build CorsixTH.xcodeproj; fi
 # Prepare ZIP archive
 - if [[ $TRAVIS_OS_NAME = osx     ]]; then OS=mac; else OS=windows; fi
 - ZIPNAME=CTH-`date +"%Y%m%d"`-$TRAVIS_BRANCH-${TRAVIS_COMMIT:0:10}-$OS.zip
 - if [ $TRAVIS_PULL_REQUEST != "false" ]; then ZIPNAME=CTH-pull-$TRAVIS_PULL_REQUEST-`date +"%Y%m%d"`-${TRAVIS_COMMIT:0:10}.zip; fi;
 - zip -r $ZIPNAME *
 - chmod 666 $ZIPNAME
 - openssl dgst -sha256 $ZIPNAME | tee $ZIPNAME.sha256
 - # Alt server for development
 - if [ $TRAVIS_REPO_SLUG != "CorsixTH/CorsixTH" ]; then curl --upload-file $ZIPNAME https://transfer.sh/$ZIPNAME; fi
 - # Upload to server
 - if [ $TRAVIS_REPO_SLUG == "CorsixTH/CorsixTH" ]; then sshpass -p "$SCP_PASS" scp -v -P12349 $ZIPNAME cthbuilder@server2.armedpineapple.co.uk:/home/cthbuilder/builds/; fi;
env:
  global:
    secure: "mPtzSeDJKVeUu6KHJEbmHa91O+QK2XM0advYdr+13yr83w3C7cGFFjWgqzirsFUHVqPgdtSJIkom0DIxX7JtRoBZmt/xon+zfLq+Q4aSkJoYezWBqp2gavS8o1kSjtW7XuIuq995yjWvn7nehyoTYkKNtz/EzX5ZIVZ/iX73iyo="
